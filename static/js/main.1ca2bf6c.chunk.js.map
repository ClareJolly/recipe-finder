{"version":3,"sources":["components/Header.js","containers/IngredientsForm.js","containers/ViewRecipe.js","containers/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","IngredientsForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","queryDatabase","console","log","state","ingredients","i","fieldName","toString","push","join","webApiUrl","axios","get","headers","Content-Type","X-RapidAPI-Key","data","then","updateRecipes","i1","i2","i3","i4","i0","rows","key","type","onChange","onClick","ViewRecipe","componentDidMount","recipe_id","recipeDetails","_this2","title","src","image","instructions","backTo","App","recipes","viewRecipe","bind","assertThisInitialized","id","pageView","view","components_Header","length","containers_IngredientsForm","map","recipe","index","chooseRecipe","containers_ViewRecipe","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ca2bf6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport '../containers/App.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <h1>Awesome Food app for Laura</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './App.css';\n\nclass IngredientsForm extends Component {\n\nconstructor(props) {\nsuper(props)\n\nthis.state = {\n  i1:'',\n  i2:'',\n  i3:'',\n  i4:'',\n  i0:''\n}\n\n}\n\nhandleChange = (event) => {\n  // console.log(event.target.name)\n  this.setState({\n    [event.target.name] : event.target.value\n  })\n\n}\n\nqueryDatabase = () => {\n  console.log(this.state)\n  var ingredients = []\n  for (var i = 0; i < 5; ++i){\n    var fieldName = \"i\" + i.toString()\n    // console.log(this.state[fieldName])\n    if (this.state[fieldName] !== '') {\n      ingredients.push(this.state[fieldName])\n    }\n  }\n  console.log(ingredients)\n  ingredients = ingredients.join('%2C')\n  console.log(ingredients)\n  // var ingredients =\n\n  // apples%2Cflour%2Csugar\n  let urlStart = 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?'\n  let webApiUrl = 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=10&ranking=1&fillIngredients=true&ingredients='+ingredients+'';\n  let fullApiUrl = 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?query=burger&cuisine=american&includeIngredients='+ingredients+'&excludeIngredients=coconut%2C+mango&intolerances=peanut%2C+shellfish&type=main+course&ranking=2&minCalories=150&maxCalories=1500&minFat=5&maxFat=100&minProtein=5&maxProtein=100&minCarbs=5&maxCarbs=100&minAlcohol=0&maxAlcohol=1000&minCaffeine=0&maxCaffeine=1000&minCopper=0&maxCopper=1000&minCalcium=0&maxCalcium=1000&minCholine=0&maxCholine=1000&minCholesterol=0&maxCholesterol=1000&minFluoride=0&maxFluoride=1000&minSaturatedFat=0&maxSaturatedFat=50&minVitaminA=0&maxVitaminA=5000&minVitaminC=0&maxVitaminC=1000&minVitaminD=0&maxVitaminD=1000&minVitaminE=0&maxVitaminE=1000&minVitaminK=0&maxVitaminK=1000&minVitaminB1=0&maxVitaminB1=1000&minVitaminB2=0&maxVitaminB2=1000&minVitaminB3=0&maxVitaminB3=1000&minVitaminB5=0&maxVitaminB5=1000&minVitaminB6=0&maxVitaminB6=1000&minVitaminB12=0&maxVitaminB12=1000&minFiber=0&maxFiber=1000&minFolate=0&maxFolate=1000&minFolicAcid=0&maxFolicAcid=1000&minIodine=0&maxIodine=1000&minIron=0&maxIron=1000&minMagnesium=0&maxMagnesium=1000&minManganese=0&maxManganese=1000&minPhosphorus=0&maxPhosphorus=1000&minPotassium=0&maxPotassium=1000&minSelenium=0&maxSelenium=1000&minSodium=0&maxSodium=1000&minSugar=0&maxSugar=1000&minZinc=0&maxZinc=1000&offset=0&number=10'\nlet tokenStr = '61a78e4b93msh2be99b23d7ed69bp1c7705jsna1e9c63f6f17';\n\n// let url = urlStart +\n// .header(\"X-RapidAPI-Key\", \"61a78e4b93msh2be99b23d7ed69bp1c7705jsna1e9c63f6f17\")\n\n  // var url = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=5&ranking=1&ingredients=apples%2Cflour%2Csugar\"\n\n  // axios.post(loginurl,userCredentials)\n  axios.get(webApiUrl, {\n  headers: {\n    'Content-Type': 'application/json',\n    'X-RapidAPI-Key': tokenStr,\n    // 'JsonStub-Project-Key': 'f39f1bd2-d303-4b7e-9a11-c0f049a46f87'\n  },\n  data: {}\n}).then((data) =>\nthis.props.updateRecipes(data.data)\n)\n// .then((data) => console.log(data))\n}\n\n  render() {\n\n    console.log(this.state)\n    var rows = [];\n    var fieldName\nfor (var i = 0; i < 5; i++) {\n  fieldName = \"i\" + (i).toString()\n  // console.log(fieldName)\n// note: we add a key prop here to allow react to uniquely identify each\n// element in this array. see: https://reactjs.org/docs/lists-and-keys.html\nrows.push( <div key={i}><input type=\"text\" name={fieldName} onChange={this.handleChange}/></div>);\n}\n\n\n\n    return (\n      <div className=\"App\">\n      Add up to 5 ingredients\n      {rows}\n      <button onClick={this.queryDatabase}>Search</button>\n      <div>\n\n\n\n\n\n\n\n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default IngredientsForm;\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './App.css';\n\nclass ViewRecipe extends Component {\n\nconstructor(props) {\nsuper(props)\n\nthis.state = {\n  recipeDetails: ''\n\n}\n\n}\n\n\n\ncomponentDidMount = () => {\n  console.log(this.props.recipe_id)\n\n  let urlStart = 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?'\n  let webApiUrl = 'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/'+this.props.recipe_id+'/information';\n\nlet tokenStr = '61a78e4b93msh2be99b23d7ed69bp1c7705jsna1e9c63f6f17';\n\n// let url = urlStart +\n// .header(\"X-RapidAPI-Key\", \"61a78e4b93msh2be99b23d7ed69bp1c7705jsna1e9c63f6f17\")\n\n  // var url = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=5&ranking=1&ingredients=apples%2Cflour%2Csugar\"\n\n  // axios.post(loginurl,userCredentials)\n  axios.get(webApiUrl, {\n  headers: {\n    'Content-Type': 'application/json',\n    'X-RapidAPI-Key': tokenStr,\n    // 'JsonStub-Project-Key': 'f39f1bd2-d303-4b7e-9a11-c0f049a46f87'\n  },\n  data: {}\n}).then((data) =>\n// console.log(data)\nthis.setState({\n  recipeDetails: data.data\n\n})\n)\n// .then((data) => console.log(data))\n}\n\n  render() {\n\n    console.log(this.state)\n    var rows = [];\n    var fieldName\nfor (var i = 0; i < 5; i++) {\n  fieldName = \"i\" + (i).toString()\n  // console.log(fieldName)\n// note: we add a key prop here to allow react to uniquely identify each\n// element in this array. see: https://reactjs.org/docs/lists-and-keys.html\nrows.push( <div key={i}><input type=\"text\" name={fieldName} onChange={this.handleChange}/></div>);\n}\n\n\n\n    return (\n      <div className=\"ViewRecipe\">\n      <div>Here are the recipe details</div>\n      <div><h2>{this.state.recipeDetails.title}</h2></div>\n      <div><img src={this.state.recipeDetails.image}/></div>\n      <div>{this.state.recipeDetails.instructions}</div>\n      <div><button onClick={() => this.props.backTo(\"list\")}>Back</button></div>\n      <div>\n\n\n\n\n\n\n\n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default ViewRecipe;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Header from '../components/Header'\nimport IngredientsForm from './IngredientsForm'\nimport ViewRecipe from './ViewRecipe'\n\nclass App extends Component {\n\n  constructor(props) {\n  super(props)\n\n  this.state = {\n    recipes:[],\n    viewRecipe: false,\n    recipe_id:''\n\n  }\n\nthis.updateRecipes = this.updateRecipes.bind(this);\nthis.backTo = this.backTo.bind(this)\n  }\n\n  chooseRecipe (id) {\n    console.log(id)\n    this.setState({\n      viewRecipe: true,\n      recipe_id: id,\n      pageView: 'home'\n    })\n  }\n\n  updateRecipes (recipes) {\n    console.log(recipes)\n    this.setState({recipes: recipes})\n    // console.log(test)\n  }\n\n  backTo(view) {\n    this.setState({\n      pageView: view,\n      viewRecipe: false\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n      {this.state.recipes.length === 0 && <IngredientsForm updateRecipes={this.updateRecipes}/>}\n      {(!this.state.viewRecipe ||  this.state.pageView === 'list') && <div className=\"recipeContainer\">\n      {this.state.recipes.map ((recipe, index) => {\n\n        {/*// var inviteesArray = event.invitees_new\n        // var inResponses = inviteesArray.filter(word => word.response === \"IN\").length*/}\n\n        return <div key={index} onClick={() => this.chooseRecipe(recipe.id)} className=\"recipeDetails\"><div>{recipe.title}</div><div className=\"recipeImage\"><img src={recipe.image} /></div></div>\n      })}\n      </div>\n      }\n      {this.state.viewRecipe && <ViewRecipe backTo={this.backTo} recipe_id = {this.state.recipe_id}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}